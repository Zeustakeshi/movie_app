{"version":3,"file":"static/js/710.8ba258b7.chunk.js","mappings":"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","sources":["components/Image.js","components/button/Button.js","components/button/ButtonAddWatchList.js","components/button/ButtonWatchNow.js","components/movies/mobile/MovieCard.js","components/voteAverage/VoteAverage.js","config.js","hooks/useGetMovieData.js","pages/MovieDetail/mobile/MovieDetail.js"],"sourcesContent":["import { forwardRef, useEffect, useState } from \"react\";\n\nfunction Image({ src, alt, ...props }, ref) {\n    const [failBack, setFallback] = useState(false);\n\n    useEffect(() => {\n        setFallback(false);\n    }, [src]);\n\n    const handleError = () => {\n        setFallback(true);\n    };\n\n    if (failBack) {\n        return (\n            <div\n                className={`w-full h-full bg-slate-800 flex justify-center items-center shadow-md`}\n            >\n                <svg\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"42\"\n                    height=\"42\"\n                    viewBox=\"0 0 32 32\"\n                >\n                    <title>photo-error</title>\n                    <path\n                        fill=\"#F62682\"\n                        d=\"M24.166 17.759h0.105v7.247c0 1.628-1.313 2.993-2.993 2.993h-14.284c-1.628 0-2.993-1.313-2.993-2.993v-14.6c0-1.681 1.365-2.993 3.046-3.046h9.978c-0.368 0.84-0.525 1.786-0.525 2.731 0 4.201 3.414 7.667 7.667 7.667zM9.777 10.144c-1.365 0-2.468 1.103-2.468 2.468s1.103 2.468 2.468 2.468c1.365 0 2.468-1.103 2.468-2.468s-1.103-2.468-2.468-2.468zM7.256 25.322l14.6 0.053-3.991-7.93c-0.263-0.578-0.998-0.578-1.313-0.053l-1.733 3.046c-0.315 0.525-1.050 0.63-1.47 0.158l-0.683-0.735c-0.683-0.735-1.891-0.63-2.416 0.263l-2.993 5.199zM24.166 4c3.361 0 6.092 2.731 6.092 6.092s-2.731 6.092-6.092 6.092c-3.361 0-6.092-2.731-6.092-6.092s2.731-6.092 6.092-6.092zM24.954 6.363h-1.208l0.105 4.569h0.998l0.105-4.569zM24.376 13.453c0.368 0 0.683-0.315 0.683-0.683s-0.315-0.683-0.683-0.683c-0.368 0-0.683 0.315-0.683 0.683s0.315 0.683 0.683 0.683z\"\n                    ></path>\n                </svg>\n            </div>\n        );\n    }\n\n    return (\n        <img ref={ref} src={src} alt={alt} {...props} onError={handleError} />\n    );\n}\n\nexport default forwardRef(Image);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick, disable, children, className = \"\" }) => {\n    return (\n        <button\n            onClick={() => {\n                if (disable) return;\n                onClick();\n            }}\n            className={`flex justify-center items-center text-white bg-primary rounded-lg shadow-lg font-semibold   md:py-3 md:px-6  md:text-lg md:gap-2 text-base gap-[2px] ${\n                disable ? \"cursor-default opacity-70\" : \"\"\n            }   ${className}`}\n        >\n            {children}\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    disable: PropTypes.bool,\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport { useAppContext } from \"../../contexts/AppProvider\";\nimport Button from \"./Button\";\nimport PropTypes from \"prop-types\";\n\nconst ButtonAddWatchList = ({\n    movieInfo,\n    disable,\n    className = \"p-[13px] md:px-4 md:py-4 md:gap-0 bg-gray-500 bg-opacity-60 rounded-lg text-[22px] md:text-xl flex justify-center items-center transition-all\",\n}) => {\n    const { setWatchLists, watchLists, setStoredWatchListValue } =\n        useAppContext();\n    const handleWatchList = () => {\n        setWatchLists((prev) => {\n            if (!JSON.stringify(prev).includes(JSON.stringify(movieInfo))) {\n                console.log(movieInfo);\n                const newWatchList = [...prev, movieInfo];\n                setStoredWatchListValue(newWatchList);\n                return newWatchList;\n            } else return [...prev];\n        });\n    };\n    return (\n        <Button\n            disable={disable}\n            onClick={() => handleWatchList()}\n            className={`${\n                JSON.stringify(watchLists).includes(JSON.stringify(movieInfo))\n                    ? \"opacity-0 invisible\"\n                    : \"\"\n            }  ${className} `}\n        >\n            <ion-icon name=\"add-sharp\"></ion-icon>\n        </Button>\n    );\n};\n\nButtonAddWatchList.propTypes = {\n    movieInfo: PropTypes.object,\n    disable: PropTypes.bool,\n    className: PropTypes.string,\n};\n\nexport default ButtonAddWatchList;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"./Button\";\n\nconst ButtonWatchNow = ({\n    disable,\n    onClick = () => {},\n    className = \"\",\n    children,\n    movieID,\n}) => {\n    const navigate = useNavigate();\n\n    const handleNavigate = () => {\n        onClick();\n        navigate(`/home/${movieID}`);\n    };\n\n    return (\n        <Button\n            disable={disable}\n            className={`${className}`}\n            onClick={handleNavigate}\n        >\n            {children}\n        </Button>\n    );\n};\n\nexport default ButtonWatchNow;\n","import React from \"react\";\nimport { useAppContext } from \"../../../contexts/AppProvider\";\nimport ButtonAddWatchList from \"../../button/ButtonAddWatchList\";\nimport PropTypes from \"prop-types\";\nimport { withErrorBoundary } from \"react-error-boundary\";\nimport ButtonWatchNow from \"../../button/ButtonWatchNow\";\nimport VoteAverage from \"../../voteAverage/VoteAverage\";\nimport Image from \"../../Image\";\n\nconst convertDate = (date) => {\n    if (!date) return;\n    const [year, month, day] = date.split(\"-\");\n\n    return [day, month, year].join(\"-\");\n};\n\nconst MovieCard = ({ movieInfo, isLoading }) => {\n    const { watchLists } = useAppContext();\n\n    return (\n        <div className=\"group movie-card rounded-xl p-5 bg-slate-800 relative h-[505px] flex flex-col justify-between items-center select-none\">\n            {isLoading ? (\n                <div\n                    className={\"skeleton w-full h-[380px] rounded-[inherit]\"}\n                ></div>\n            ) : (\n                <div className=\"relative w-full h-[380px]  rounded-[inherit]\">\n                    <Image\n                        src={`https://image.tmdb.org/t/p/w780/${\n                            movieInfo.poster_path || movieInfo.backdrop_path\n                        }`}\n                        alt=\"\"\n                        className=\"w-full h-full  rounded-[inherit] object-cover object-top\"\n                    />\n                    <ButtonWatchNow\n                        className=\"absolute top-2/4 left-2/4 bg-opacity-80 rounded-full -translate-x-2/4 -translate-y-2/4 p-4\"\n                        movieID={movieInfo?.id}\n                        disable={isLoading}\n                    >\n                        <span className=\"flex items-center justify-center text-3xl\">\n                            <ion-icon name=\"play-circle\"></ion-icon>\n                        </span>\n                    </ButtonWatchNow>\n                </div>\n            )}\n            <div className=\"flex flex-col justify-center items-center text-white w-full \">\n                {isLoading ? (\n                    <span className=\"skeleton w-full h-[10px] rounded-xl my-1 mt-2\"></span>\n                ) : (\n                    <h3 className=\"font-bold text-lg text-left w-full my-1 mt-2 overflow-hidden overflow-ellipsis whitespace-nowrap\">\n                        {movieInfo.title || movieInfo.name}\n                    </h3>\n                )}\n                <div className=\"flex justify-between items-center text-gray-400 w-full mb-7 text-sm\">\n                    {isLoading ? (\n                        <span className=\"skeleton w-[60px] h-[10px] rounded-xl my-3\"></span>\n                    ) : (\n                        <span>\n                            {convertDate(movieInfo.release_date) ||\n                                convertDate(movieInfo.first_air_date)}\n                        </span>\n                    )}\n                    <VoteAverage\n                        isLoading={isLoading}\n                        voteAverage={movieInfo?.vote_average}\n                    />\n                </div>\n            </div>\n            <ButtonAddWatchList\n                className={`absolute top-5 right-5 p-3 bg-gray-500 bg-opacity-60 rounded-lg text-[22px] flex justify-center items-center invisible opacity-0 ${\n                    !JSON.stringify(watchLists).includes(\n                        JSON.stringify(movieInfo)\n                    ) && \"group-hover:opacity-100 group-hover:visible\"\n                } transition-all`}\n                disable={isLoading}\n                movieInfo={movieInfo}\n            />\n        </div>\n    );\n};\n\nMovieCard.propTypes = {\n    movieInfo: PropTypes.shape({\n        poster_path: PropTypes.string,\n        backdrop_path: PropTypes.string,\n        title: PropTypes.string,\n        name: PropTypes.string,\n        release_date: PropTypes.string,\n        first_air_date: PropTypes.string,\n        vote_average: PropTypes.number,\n        id: PropTypes.number,\n    }),\n\n    movieInfo: PropTypes.object,\n\n    isLoading: PropTypes.bool,\n};\n\nfunction FallbackComponent() {\n    return (\n        <p className=\"bg-red-50 text-red-500\">\n            Something went wrong with this component\n        </p>\n    );\n}\n\nexport default withErrorBoundary(MovieCard, {\n    FallbackComponent,\n});\n","import React from \"react\";\nimport \"./VoteAverage.scss\";\n\nconst VoteAverage = ({\n    className,\n    isLoading,\n    voteAverage,\n    size = \"40px\",\n    bold = \"3px\",\n    text = \"10px\",\n    color = \"#f62682\",\n}) => {\n    const cacularVoteAverage = (voteAverage) => {\n        if (typeof voteAverage !== \"number\") {\n            voteAverage = 0;\n        }\n        const average = (voteAverage / 10) * 100;\n        return Math.round(average * 100) / 100;\n    };\n    const average = cacularVoteAverage(voteAverage);\n    return (\n        <span className={`flex justify-center items-center ${className}`}>\n            {isLoading ? (\n                <div\n                    className=\"pie animate skeleton\"\n                    style={{\n                        \"--p\": 10,\n                        \"--b\": bold,\n                        \"--w\": size,\n                        \"--text\": text,\n                        \"--c\": color,\n                    }}\n                >\n                    10%\n                </div>\n            ) : (\n                <div\n                    className={`pie animate `}\n                    style={{\n                        \"--p\": average,\n                        \"--b\": bold,\n                        \"--w\": size,\n                        \"--text\": text,\n                        \"--c\": color,\n                    }}\n                >\n                    {average}%\n                </div>\n            )}\n        </span>\n    );\n};\n\nexport default VoteAverage;\n","export const fetcher = (...args) => {\n    return fetch(...args).then((res) => res.json());\n};\nexport const API_KEY = \"1a5c4195d358f72fdbec913b288dd9e8\";\n","import useSWR from \"swr\";\nimport { API_KEY, fetcher } from \"../config\";\nimport { useAppContext } from \"../contexts/AppProvider\";\n\nconst useGetMovieData = (path, query, page) => {\n    const { language } = useAppContext();\n\n    const tmdbEndPoint = \"https://api.themoviedb.org/3\";\n\n    const createUrl = () => {\n        if (!path) return;\n        return `${tmdbEndPoint}/${path}?api_key=${API_KEY}&language=${language}${\n            query ? `&query=${query}` : \"\"\n        }${page ? `&page=${page}` : \"\"}`;\n    };\n    const url = createUrl();\n    const { data, error } = useSWR(url, fetcher);\n    if (error) {\n        console.log(error);\n    } else if (!data) {\n        return {\n            data: {},\n            error: error,\n        };\n    } else {\n        return {\n            data: data,\n            error: error,\n        };\n    }\n\n    return data || {};\n};\n\nexport default useGetMovieData;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport MovieCard from \"../../../components/movies/mobile/MovieCard\";\nimport useGetMovieData from \"../../../hooks/useGetMovieData\";\nimport VoteAverage from \"../../../components/voteAverage/VoteAverage\";\n\n// Import Swiper styles\nimport \"swiper/css/effect-coverflow\";\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/effect-cube\";\n\n// import required modules\nimport { Pagination, EffectCube, Autoplay, EffectCoverflow } from \"swiper\";\nimport Image from \"../../../components/Image\";\n\nconst convertDate = (date) => {\n    if (!date) return;\n    const [year, month, day] = date.split(\"-\");\n\n    return [day, month, year].join(\"-\");\n};\n\nconst MovieDetail = () => {\n    const { movieId } = useParams();\n\n    const { data } = useGetMovieData(`movie/${movieId}`);\n\n    if (!data) return;\n    const {\n        backdrop_path,\n        poster_path,\n        title,\n        genres,\n        overview,\n        release_date,\n        vote_average,\n    } = data;\n\n    return (\n        <div className=\"w-[100vw]\">\n            <div className=\"relative rounded-xl h-[360px] mb-10\">\n                <div className=\"absolute w-full inset-0 bg-slate-800 bg-opacity-70\"></div>\n                <Image\n                    src={`https://image.tmdb.org/t/p/original/${\n                        backdrop_path || poster_path\n                    }`}\n                    alt=\"\"\n                    className=\"w-full h-full object-fill rounded-[inherit]\"\n                />\n                <Swiper\n                    autoplay={{\n                        delay: 3000,\n                        disableOnInteraction: false,\n                    }}\n                    effect={\"cube\"}\n                    grabCursor={true}\n                    cubeEffect={{\n                        shadow: true,\n                        slideShadows: true,\n                        shadowOffset: 20,\n                        shadowScale: 0.94,\n                    }}\n                    pagination={true}\n                    modules={[Pagination, EffectCube, Autoplay]}\n                    className=\"top-0 left-0 movie-detail inset-0 z-10\"\n                >\n                    <SwiperSlide>\n                        <div className=\"flex justify-center items-center w-full h-full relative z-10 rounded-2xl shadow-lg\">\n                            <Image\n                                src={`https://image.tmdb.org/t/p/w500/${\n                                    poster_path || backdrop_path\n                                }`}\n                                alt=\"\"\n                                className=\"w-full h-full max-w-[200px] max-h-[300px]  object-cover object-top rounded-[inherit]\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"mx-auto w-full max-w-[500px] mb-10 flex flex-col justify-start items-center p-4\">\n                            <h3 className=\"my-3 font-bold text-xl\">Overview</h3>\n                            <p\n                                className=\"text-justify text-base leading-relaxed content-overflow-limitline \"\n                                style={{\n                                    \"--line\": \"9\",\n                                }}\n                            >\n                                {overview || \"no overview\"}\n                            </p>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide className=\"flex justify-center items-center\">\n                        <div className=\"w-[90%] h-auto bg-slate-800 bg-opacity-30 rounded-2xl flex justify-start items-center gap-3 p-4\">\n                            <VoteAverage\n                                voteAverage={vote_average}\n                                size=\"100px\"\n                                bold=\"6px\"\n                                text=\"25px\"\n                            />\n                            <div className=\"font-bold flex flex-col gap-2 justify-center items-start\">\n                                <div>{title}</div>\n                                <div>\n                                    {release_date && (\n                                        <span>\n                                            <span className=\"mr-2\">Time:</span>\n                                            {convertDate(release_date)}\n                                        </span>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                </Swiper>\n            </div>\n            <div className=\"text-3xl font-bold text-center mb-5 p-3  \">\n                {title}\n            </div>\n            <div className=\"w-[100vw] p-4 flex justify-center items-center gap-2 mb-10\">\n                {genres &&\n                    genres.length > 0 &&\n                    genres.slice(0, 3).map((item, index) => (\n                        <div\n                            key={item.id || index}\n                            className=\"text-sm border-2 rounded-2xl py-2 px-3 border-primary text-primary font-bold\"\n                        >\n                            {item.name}\n                        </div>\n                    ))}\n            </div>\n\n            <MovieCredits />\n            <MovieVideos />\n            <MovieSimilar />\n        </div>\n    );\n};\n\nconst MovieCredits = () => {\n    const { movieId } = useParams();\n    const { data } = useGetMovieData(`movie/${movieId}/credits`);\n    if (!data || !data.cast || data.cast.length <= 0) return;\n\n    const { cast } = data;\n\n    return (\n        <>\n            <h3 className=\"text-center text-2xl mb-10 font-bold\">\n                Top Billed Cast\n            </h3>\n            <div className=\"grid grid-cols-4 gap-3 w-full p-3\">\n                {cast.slice(0, 4).map((item) => (\n                    <div key={item.id} className=\"cast-item\">\n                        <Image\n                            src={`https://image.tmdb.org/t/p/w300/${item.profile_path}`}\n                            alt=\"\"\n                            className=\"w-full h-[120px] object-cover rounded-lg\"\n                        />\n                    </div>\n                ))}\n            </div>\n        </>\n    );\n};\n\nconst MovieVideos = () => {\n    const { movieId } = useParams();\n    const { data } = useGetMovieData(`movie/${movieId}/videos`);\n\n    if (!data || !data.results || data.results.length <= 0) return null;\n\n    const { results } = data;\n    return (\n        <div className=\"py-10 mt-10\">\n            <h2 className=\"text-center text-2xl mb-10 font-bold\">Trailers</h2>\n\n            {results.slice(0, 3).map((item) => (\n                <div key={item.id} className=\"w-full mt-10\">\n                    <h3 className=\"font-bold text-xl mb-5\">{item.name}</h3>\n                    <div className=\"w-full aspect-video\">\n                        <iframe\n                            className=\"w-full h-full object-fill\"\n                            width=\"864\"\n                            height=\"486\"\n                            title={item.name}\n                            src={`https://www.youtube.com/embed/${item.key}`}\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                        ></iframe>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst MovieSimilar = () => {\n    const { movieId } = useParams();\n\n    const { data } = useGetMovieData(`movie/${movieId}/similar`);\n\n    if (!data || !data.results || data.results.length <= 0) return null;\n\n    const { results: movies } = data;\n\n    return (\n        <div className=\"mt-10\">\n            <h2 className=\"text-center text-3xl mb-10 font-bold\">\n                Similar movies\n            </h2>\n            <div className=\"movie-list\">\n                <Swiper\n                    grabCursor={true}\n                    slidesPerView=\"auto\"\n                    effect={\"coverflow\"}\n                    centeredSlides={true}\n                    coverflowEffect={{\n                        rotate: 80,\n                        stretch: 0,\n                        depth: 100,\n                        modifier: 1,\n                        slideShadows: true,\n                    }}\n                    autoplay={{\n                        delay: 2000,\n                        disableOnInteraction: false,\n                    }}\n                    loop={true}\n                    pagination={true}\n                    modules={[EffectCoverflow, Pagination, Autoplay]}\n                >\n                    {movies?.map((movie, index) => {\n                        return (\n                            <SwiperSlide key={movie.id || index}>\n                                <MovieCard movieInfo={movie} />\n                            </SwiperSlide>\n                        );\n                    })}\n                </Swiper>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieDetail;\n"],"names":["Image","ref","src","alt","props","useState","failBack","setFallback","useEffect","className","version","xmlns","width","height","viewBox","fill","d","onError","forwardRef","onClick","disable","children","movieInfo","useAppContext","setWatchLists","watchLists","setStoredWatchListValue","prev","JSON","stringify","includes","console","log","newWatchList","name","movieID","navigate","useNavigate","convertDate","date","split","year","month","join","withErrorBoundary","isLoading","poster_path","backdrop_path","id","title","release_date","first_air_date","voteAverage","vote_average","FallbackComponent","size","bold","text","color","average","Math","round","cacularVoteAverage","style","fetcher","fetch","then","res","json","path","query","page","language","url","createUrl","useSWR","data","error","MovieCredits","movieId","useParams","useGetMovieData","cast","length","slice","map","item","profile_path","MovieVideos","results","key","frameBorder","allow","allowFullScreen","MovieSimilar","movies","grabCursor","slidesPerView","effect","centeredSlides","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","autoplay","delay","disableOnInteraction","loop","pagination","modules","EffectCoverflow","Pagination","Autoplay","movie","index","MovieCard","genres","overview","cubeEffect","shadow","shadowOffset","shadowScale","EffectCube","VoteAverage"],"sourceRoot":""}